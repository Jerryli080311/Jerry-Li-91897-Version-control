#import tkinter so we can make a GUI
from tkinter import *
from tkinter import ttk  # Import ttk for combobox

#quit
def quit():
    main_window.destroy()

#print details
def print_Hired_details():
    name_count = 0
    #Create the column headings
    Label(main_window, font=("Helvetica 10 bold"), text="Row").grid(column=0, row=7)
    Label(main_window, font=("Helvetica 10 bold"), text="Name").grid(column=1, row=7)
    Label(main_window, font=("Helvetica 10 bold"), text="Item Hired").grid(column=2, row=7)
    Label(main_window, font=("Helvetica 10 bold"), text="Receipt Number").grid(column=3, row=7)
    Label(main_window, font=("Helvetica 10 bold"), text="Items Number").grid(column=4, row=7)

    while name_count < counters['total_entries']:
        Label(main_window, text=name_count).grid(column=0, row=name_count + 8) 
        Label(main_window, text=(Hired_details[name_count][0])).grid(column=1, row=name_count + 8)
        Label(main_window, text=(Hired_details[name_count][1])).grid(column=2, row=name_count + 8)
        Label(main_window, text=(Hired_details[name_count][2])).grid(column=3, row=name_count + 8)
        Label(main_window, text=(Hired_details[name_count][3])).grid(column=4, row=name_count + 8)
        name_count +=  1
        counters['name_count'] = name_count
        
#Check the inputs are all valid
def check_inputs():
    input_check = 0
    Label(main_window, text="                   ").grid(column=2, row=0)
    Label(main_window, text="                   ").grid(column=2, row=1)
    Label(main_window, text="                   ").grid(column=2, row=2)
    Label(main_window, text="                   ").grid(column=2, row=3)
    #Check that input is not blank, set error text if blank   
    if len(entry_name.get()) == 0:
        Label(main_window, fg="red", text="Required").grid(column=2, row=0)
        input_check = 1
    if len(entry_Hired_items.get()) == 0:
        Label(main_window, fg="red", text="Required").grid(column=2, row=1)
        input_check = 1  
    if len(entry_items_number.get()) == 0:
        Label(main_window, fg="red", text="Required").grid(column=2, row=3)
        input_check = 1
    if input_check == 0:
        append_name()

def append_name():
    receipt_number = counters['receipt_number']
    Hired_details.append([entry_name.get(), entry_Hired_items.get(), receipt_number, entry_items_number.get()])
    
    entry_name.delete(0, 'end')
    entry_Hired_items.set('')  # Use set() method for combobox
    entry_items_number.delete(0, 'end')
    counters['total_entries'] += 1
    counters['receipt_number'] += 1  # Increment the receipt number

#delete a row from the list
def delete_row():
  
    receipt_to_delete = int(delete_item.get())
    for i, details in enumerate(Hired_details):
        if details[2] == receipt_to_delete:
            del Hired_details[i]
            counters['total_entries'] -= 1
            break
    delete_item.delete(0, 'end')
 
    name_count = counters['name_count']
    for i in range(5):
        Label(main_window, text="          ").grid(column=i, row=name_count + 7)
    #print all the items in the list
    print_Hired_details()

#create the buttons and labels
def setup_buttons():
    Label(main_window, text="Full Name").grid(column=0, row=0, sticky=E)
    Label(main_window, text="Item Hired").grid(column=0, row=1, sticky=E)
    Button(main_window, text="Quit", command=quit, width=10).grid(column=4, row=0, sticky=E)
    Button(main_window, text="Append Details", command=check_inputs).grid(column=3, row=1)
    Button(main_window, text="Print Details", command=print_Hired_details, width=10).grid(column=4, row=1, sticky=E)
    Label(main_window, text="Item Number").grid(column=0, row=3, sticky=E)
    Label(main_window, text="Receipt # to delete").grid(column=3, row=2, sticky=E)
    Button(main_window, text="Delete Row", command=delete_row, width=10).grid(column=4, row=3, sticky=E)
    Label(main_window, text="               ").grid(column=2, row=0)


def main():
    #Start the GUI it up
    setup_buttons()
    main_window.mainloop()
    
counters = {'total_entries': 0, 'name_count': 0, 'receipt_number': 1}
Hired_details = []    
main_window = Tk()    
entry_name = Entry(main_window)
entry_name.grid(column=1, row=0)
entry_Hired_items = ttk.Combobox(main_window, values=["Chair", "Fork", "Balloons"], state="readonly")  # Combobox for hired items
entry_Hired_items.grid(column=1, row=1)
entry_items_number = Entry(main_window)
entry_items_number.grid(column=1, row=3)
delete_item = Entry(main_window)
delete_item.grid(column=4, row=2)    
main()
